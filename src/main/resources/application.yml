server:
  port: 8080

logging:
  level:
    root: INFO
    com.example.backend: DEBUG
  file:
    name: logs/application.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

spring:
  application:
    name: backend-base
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: validate  # Flyway가 관리하므로 validate만 사용
  sql:
    init:
      mode: never
  flyway:
    enabled: true
    locations: classpath:db/migration
    baselineOnMigrate: true  # 기존 DB에서도 마이그레이션 시작 가능

mybatis:
  mapper-locations: classpath*:mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: true

# JWT 설정 (운영에서는 환경변수로 주입 권장)
app:
  jwt:
    secret: ${JWT_SECRET:change-me-in-production}
    expiration-seconds: 3600 # 1시간 (access 토큰)
    refresh-expiration-seconds: 604800 # 7일 (refresh 토큰)

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui
    operationsSorter: method
    tagsSorter: alpha

# Actuator 설정
management:
  endpoints:
    web:
      base-path: /actuator
      # 환경별로 다르게 설정됨
  endpoint:
    health:
      show-details: when-authorized  # 인증된 사용자에게만 상세 정보 표시
  metrics:
    export:
      simple:
        enabled: true